image: gradle:8.6-jdk17 # VÃ©rifie l'image utilisÃ©e

stages:
- validate
- build
- test
- pack
- publish

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
- echo "ðŸ”§ Initialisation de l'environnement..."
- chmod +x gradlew # S'assurer que Gradle Wrapper est exÃ©cutable
- java -version # VÃ©rifier la version de Java
- ls -l /opt/ # VÃ©rifier oÃ¹ Java est installÃ©
- ls -l /usr/lib/jvm/

validate:
  stage: validate
  script:
  - ./gradlew --version
  - ./gradlew help
  allow_failure: false # Stoppe immÃ©diatement le pipeline si Gradle est mal configurÃ©

build:
  stage: build
  script:
  - ./gradlew build
  artifacts:
    paths:
    - build/libs/*.war
    expire_in: 1 week

test:
  stage: test
  script:
  - ./gradlew test
  allow_failure: false # Le pipeline Ã©choue si les tests Ã©chouent
  dependencies:
  - build

pack:
  stage: pack
  script:
  - ./gradlew war # Si c'est un projet WAR
  # - ./gradlew jar  # Utiliser JAR si nÃ©cessaire
  artifacts:
    paths:
    - build/libs/*.war # Change selon ton build (ex: `.jar`)
    expire_in: 1 week
  dependencies:
  - build

publish:
  stage: publish
  script:
  - export JAVA_HOME="/opt/java/openjdk" # Correction ici
  - echo "ðŸ“¦ Authentification pour GitLab Package Registry..."
  - echo "machine gitlab.com login ${CI_DEPLOY_USER} password ${CI_DEPLOY_PASSWORD}" > ~/.netrc
  - ./gradlew publish
  only:
  - main
  dependencies:
  - pack
  rules:
  - if: $CI_COMMIT_BRANCH == "main"
