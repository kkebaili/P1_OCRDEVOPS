image: gradle:8.6-jdk17 # Utilisation d'une image Gradle avec JDK 17

stages:
  - build
  - test
  - pack
  - publish

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - echo "ðŸ”§ Initialisation de l'environnement..."
  - chmod +x gradlew # Rendre Gradle Wrapper exÃ©cutable
  - java -version # VÃ©rifier la version de Java
  - ls -l /usr/lib/jvm/ # VÃ©rifier si Java est bien installÃ©

build:
  stage: build
  script:
    - ./gradlew build
  artifacts:
    paths:
      - build/libs/*.war
    expire_in: 1 week

test:
  stage: test
  script:
    - ./gradlew test
  allow_failure: false # Le pipeline Ã©choue si les tests Ã©chouent

pack:
  stage: pack
  script:
    - ./gradlew war # Si c'est un projet WAR
    # - ./gradlew jar  # Utiliser JAR si nÃ©cessaire
  artifacts:
    paths:
      - build/libs/*.war # Change selon ton build (ex: `.jar`)
    expire_in: 1 week

publish:
  stage: publish
  script:
    - export JAVA_HOME="/usr/lib/jvm/java-17-openjdk-amd64" # Correction du JAVA_HOME
    - echo "ðŸ“¦ Authentification pour GitLab Package Registry..."
    - echo "machine gitlab.com login ${CI_DEPLOY_USER} password ${CI_DEPLOY_PASSWORD}" > ~/.netrc
    - ./gradlew publish
  dependencies:
    - pack
  rules:
    - if: $CI_COMMIT_BRANCH == "main"  # Utilisation de `rules` au lieu de `only`
